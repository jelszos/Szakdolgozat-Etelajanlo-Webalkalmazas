package com.szakdologzat.repiceapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FavoriteRelationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFavoriteRelationAllPropertiesEquals(FavoriteRelation expected, FavoriteRelation actual) {
        assertFavoriteRelationAutoGeneratedPropertiesEquals(expected, actual);
        assertFavoriteRelationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFavoriteRelationAllUpdatablePropertiesEquals(FavoriteRelation expected, FavoriteRelation actual) {
        assertFavoriteRelationUpdatableFieldsEquals(expected, actual);
        assertFavoriteRelationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFavoriteRelationAutoGeneratedPropertiesEquals(FavoriteRelation expected, FavoriteRelation actual) {
        assertThat(expected)
            .as("Verify FavoriteRelation auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFavoriteRelationUpdatableFieldsEquals(FavoriteRelation expected, FavoriteRelation actual) {
        // empty method

    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFavoriteRelationUpdatableRelationshipsEquals(FavoriteRelation expected, FavoriteRelation actual) {
        assertThat(expected)
            .as("Verify FavoriteRelation relationships")
            .satisfies(e -> assertThat(e.getRecipe()).as("check recipe").isEqualTo(actual.getRecipe()));
    }
}
