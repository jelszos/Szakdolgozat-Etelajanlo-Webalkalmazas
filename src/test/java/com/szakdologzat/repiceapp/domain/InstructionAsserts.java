package com.szakdologzat.repiceapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class InstructionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInstructionAllPropertiesEquals(Instruction expected, Instruction actual) {
        assertInstructionAutoGeneratedPropertiesEquals(expected, actual);
        assertInstructionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInstructionAllUpdatablePropertiesEquals(Instruction expected, Instruction actual) {
        assertInstructionUpdatableFieldsEquals(expected, actual);
        assertInstructionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInstructionAutoGeneratedPropertiesEquals(Instruction expected, Instruction actual) {
        assertThat(expected)
            .as("Verify Instruction auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInstructionUpdatableFieldsEquals(Instruction expected, Instruction actual) {
        assertThat(expected)
            .as("Verify Instruction relevant properties")
            .satisfies(e -> assertThat(e.getTitle()).as("check title").isEqualTo(actual.getTitle()))
            .satisfies(e -> assertThat(e.getRequiredTime()).as("check requiredTime").isEqualTo(actual.getRequiredTime()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInstructionUpdatableRelationshipsEquals(Instruction expected, Instruction actual) {
        assertThat(expected)
            .as("Verify Instruction relationships")
            .satisfies(e -> assertThat(e.getRecipe()).as("check recipe").isEqualTo(actual.getRecipe()));
    }
}
