package com.szakdologzat.repiceapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class IngredientAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIngredientAllPropertiesEquals(Ingredient expected, Ingredient actual) {
        assertIngredientAutoGeneratedPropertiesEquals(expected, actual);
        assertIngredientAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIngredientAllUpdatablePropertiesEquals(Ingredient expected, Ingredient actual) {
        assertIngredientUpdatableFieldsEquals(expected, actual);
        assertIngredientUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIngredientAutoGeneratedPropertiesEquals(Ingredient expected, Ingredient actual) {
        assertThat(expected)
            .as("Verify Ingredient auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIngredientUpdatableFieldsEquals(Ingredient expected, Ingredient actual) {
        assertThat(expected)
            .as("Verify Ingredient relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getAmount()).as("check amount").isEqualTo(actual.getAmount()))
            .satisfies(e -> assertThat(e.getUnit()).as("check unit").isEqualTo(actual.getUnit()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIngredientUpdatableRelationshipsEquals(Ingredient expected, Ingredient actual) {
        assertThat(expected)
            .as("Verify Ingredient relationships")
            .satisfies(e -> assertThat(e.getInstruction()).as("check instruction").isEqualTo(actual.getInstruction()));
    }
}
